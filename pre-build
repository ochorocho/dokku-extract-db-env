#!/usr/bin/env bash
# Extract database credentials to env vars set by `DATABASE_URL`

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

APP="$1"; IMAGE_TAG="$2"; IMAGE=$(get_app_image_name $APP $IMAGE_TAG)
verify_app_name "$APP"

dokku_log_info1 "Setting database credentials env vars ..."

URL=($(echo $DATABASE_URL | sed -e 's/\(.*\)\:\/\/\(.*\):\(.*\)\@\(.*\)\:\(.*\)\/\(.*\)/\1 \2 \3 \4 \5 \6/'))

dokku_log_info1 "Adding host-keys to build environment ..."

DATABASE_TYPE=${URL[0]}
DATABASE_USER=${URL[1]}
DATABASE_PASSWORD=${URL[2]}
DATABASE_HOST=${URL[3]}
DATABASE_PORT=${URL[4]}
DATABASE_NAME=${URL[5]}

# Push env vars to docker
CID=$(echo -e 'export DATABASE_TYPE="$DATABASE_TYPE"
export DATABASE_USER="$DATABASE_USER"
export DATABASE_PASSWORD="$DATABASE_PASSWORD"
export DATABASE_HOST="$DATABASE_HOST"
export DATABASE_PORT="$DATABASE_PORT"
export DATABASE_NAME="$DATABASE_NAME"
' | "$DOCKER_BIN" run -i -a stdin $IMAGE /bin/bash -c "cat > /app/.profile.d/extract_db_env.sh")

# Test/Wait for docker process to finish and commit
test $(docker wait $CID) -eq 0
"$DOCKER_BIN" commit "${DOCKER_COMMIT_LABEL_ARGS[@]}" $CID $IMAGE >/dev/null